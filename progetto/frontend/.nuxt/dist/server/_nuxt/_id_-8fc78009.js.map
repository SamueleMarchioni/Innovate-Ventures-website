{"version":3,"file":"_id_-8fc78009.js","sources":["../../../../assets/img/people/Anna Nguyen.jpeg","../../../../assets/img/people/David Rodriguez.jpeg","../../../../assets/img/people/Emily Chen.jpeg","../../../../assets/img/people/Jane Doe.jpeg","../../../../assets/img/people/John Smith.jpeg","../../../../assets/img/people/Lisa Williams.jpeg","../../../../assets/img/people/Mark Johnson.jpeg","../../../../assets/img/people/Michael Brown.jpeg","../../../../assets/img/people/Sarah Thompson.jpeg","../../../../assets/img/people/Steven Lee.jpeg","../../../../pages/people/[id].vue"],"sourcesContent":["export default \"__VITE_ASSET__604518c3__\"","export default \"__VITE_ASSET__b281d2a3__\"","export default \"__VITE_ASSET__90692ee8__\"","export default \"__VITE_ASSET__6f858122__\"","export default \"__VITE_ASSET__7738d5e0__\"","export default \"__VITE_ASSET__c803321e__\"","export default \"__VITE_ASSET__6b6a292b__\"","export default \"__VITE_ASSET__bf90b0ef__\"","export default \"__VITE_ASSET__73882f02__\"","export default \"__VITE_ASSET__81653766__\"","<!--\n    Page description for a single person.\n    As described in the SmallCard component, the same component was used for both person and project since they have the same structure.\n-->\n<template>\n    <main>\n        <div class = \"info-group-person\">\n            \n            <div>\n                <img id=\"person-imm\" v-bind:src=\"getSrc(person.name)\" alt=\"\"/>\n            </div>\n            \n            <div id = \"data-container-person\">\n                <p class = \"data-person\"><b>Name:</b> <span>{{ person.name }}</span></p>\n                <p class = \"data-person\"><b>Role:</b> <span>{{ person.role }}</span></p>\n                <p class = \"data-person\"><b>Age:</b> <span>{{ person.age }}</span></p>\n            </div>\n        </div>\n        \n        <!--\n            v-html allows us to change the structure of a HTML element.\n            It used because of the 'newLineOnFullStop' function that returns a string with the <br> tags.\n            This function is a composable that is available anywhere, without requiring to be imported.\n        -->\n\n        <p id = \"description-person\" v-html = \"newLineOnFullStop(person.description)\"></p>\n\n      \n         <h1 id=\"proj-person\">Projects supervised:</h1>\n         \n         <div id = \"person-card-container\">\n            <SmallCard v-for = \"project of person.projects\" :link = \"'/projects/' + project.id\" :title = \"project.name\" :subtitle = \"project.field\"/>\n        </div>\n    </main>\n</template>\n\n<script setup>\n    \n    const route = useRoute()\n    const id = route.params.id\n    // useRuntimeConfig provide us with environment variables set up in the nuxtconfig file\n    const { data: person } = await useFetch(useRuntimeConfig().public.serverURL + '/people/' + id)\n    \n    const getSrc = (name) => {\n      const path = `/assets/img/people/${name}.jpeg`;\n      const modules = import.meta.globEager(\"/assets/img/people/*.jpeg\");\n      return modules[path].default;\n    };\n\n    useHead({\n    title: \"Person - Innovate Ventures \" ,\n    meta: [\n      {\n        name: 'description',\n        content: 'single person page, all information about the current job/position of a specific pearson' \n      },\n      {\n        name: 'keywords',\n        content : 'person, projects, supervisor, position, job'\n      }\n    ]\n  });\n\n</script>\n\n<style>\n    \n    .info-group-person{\n        display: grid; \n        align-items: top;\n        grid-template-columns: 1fr 1fr;\n        column-gap: auto;\n        margin-top:2%;\n    }\n\n    .data-person{\n        font-size: 33px;\n        text-align: left;\n        margin-left:3%;\n        color:#03bfcb;\n    }\n\n    #person-imm{\n        max-width: 400px;\n        max-height: 400px;\n        aspect-ratio: 1/1;\n    }\n    \n    #description-person {\n        padding: 0 20px 0 20px;\n        font-size: 18pt;\n        color: #03bfcb;\n        text-align: center;\n        font-style: italic;\n        align-items: top;\n        \n    }\n    #proj-person{\n        color:  rgb(235, 134, 98);\n        font-size: 25pt;\n    }\n\n    \n</style>"],"names":["_withAsyncContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,MAAe,cAAA,KAAA,iBAAA,2BAAA;;;;;ACAf,MAAe,kBAAA,KAAA,iBAAA,+BAAA;;;;;ACAf,MAAe,aAAA,KAAA,iBAAA,0BAAA;;;;;ACAf,MAAe,WAAA,KAAA,iBAAA,wBAAA;;;;;ACAf,MAAe,aAAA,KAAA,iBAAA,0BAAA;;;;;ACAf,MAAe,gBAAA,KAAA,iBAAA,6BAAA;;;;;ACAf,MAAe,eAAA,KAAA,iBAAA,4BAAA;;;;;ACAf,MAAe,gBAAA,KAAA,iBAAA,6BAAA;;;;;ACAf,MAAe,iBAAA,KAAA,iBAAA,8BAAA;;;;;ACAf,MAAe,aAAA,KAAA,iBAAA,0BAAA;;;;;;;;;;;ACsCX,UAAM,QAAQ,SAAU;AACxB,UAAM,KAAK,MAAM,OAAO;AAExB,UAAM,EAAE,MAAM,OAAQ,KAAS,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAA,SAA0B,iBAAC,EAAC,OAAO,YAAY,aAAa,IAAE,aAAA,CAAA;AAE7F,UAAM,SAAS,CAAC,SAAS;AACvB,YAAM,OAAO,sBAAsB;AACnC,YAAM,UAAU,uBAAA,OAAA,EAAA,uCAAA,iBAAA,2CAAA,iBAAA,sCAAA,iBAAA,oCAAA,iBAAA,sCAAA,iBAAA,yCAAA,iBAAA,wCAAA,iBAAA,yCAAA,iBAAA,0CAAA,iBAAA,sCAAA,gBAAA,CAAA;AAChB,aAAO,QAAQ,IAAI,EAAE;AAAA,IAC3B;AAEI,YAAQ;AAAA,MACR,OAAO;AAAA,MACP,MAAM;AAAA,QACJ;AAAA,UACE,MAAM;AAAA,UACN,SAAS;AAAA,QACV;AAAA,QACD;AAAA,UACE,MAAM;AAAA,UACN,SAAU;AAAA,QACX;AAAA,MACF;AAAA,IACL,CAAG;;;;;;;;;;;;;;;;;;;;;"}